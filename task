#!/bin/bash

function start() {
    echo "The task setup is initiated"
}

function init() {
    load-env
    ssh -t head.hpc.zhaw.ch "mkdir -p $REMOTE_PATH/work_area/{data,scripts,data_temp,results}"
    echo "The directories are created in the following dir: $REMOTE_PATH/work_area, with following subddirs:"
    ssh -t head.hpc.zhaw.ch "ls -l $REMOTE_PATH/work_area/"
}

function list-scripts() {
    ls -l ./scripts
}

function run-script() {
    load-env
    scp ./scripts/$1 head.hpc.zhaw.ch:$REMOTE_PATH
    scp env head.hpc.zhaw.ch:$REMOTE_PATH
    echo "Script: $1 and env file are uploaded "
    ssh head.hpc.zhaw.ch "cd $REMOTE_PATH; pwd; sbatch $1"
    echo "Script: $1 is running"
}

function run-ws() {
    export $(cat .env)
    echo "Uploading scripts with the workflow name $1 "
    scp ./scripts/$1* head.hpc.zhaw.ch:$REMOTE_PATH
    scp .env head.hpc.zhaw.ch:$REMOTE_PATH
}

function conn-hpc() {
    echo "starting ssh connection to the hpc"
    ssh -t head.hpc.zhaw.ch "cd /cfs/earth/scratch/voro/scripts; bash"
}

function load-env() {
    export $(cat env  | sed 's/#.*//g' | xargs)
    echo "The env file: $1 is loaded"
}

function upload-script() {
    load-env
    scp ./scripts/$1 head.hpc.zhaw.ch:$REMOTE_PATH
    scp env head.hpc.zhaw.ch:$REMOTE_PATH
    echo "Script: $1 and env file are uploaded "
}

function run-hpc-script() {
    load-env
    echo "run $1 script"
    ssh head.hpc.zhaw.ch "cd $REMOTE_PATH; pwd; sbatch $1"
}

function hpc-status() {
    load-env $2
    echo "Get queue status"
    ssh head.hpc.zhaw.ch "cd $REMOTE_PATH; pwd; squeue"
}

function job-status() {
    echo "Get job #$1 status"
    ssh head.hpc.zhaw.ch "cd $REMOTE_PATH; pwd; sacct -j $1 --format=JobName,CPUTimeRAW,Submit,Start,End,Elapsed"
}

function node-status() {
    echo "Get node status"
    ssh head.hpc.zhaw.ch "cd $REMOTE_PATH; pwd; sinfo"
}

function cancel-job() {
    echo "Cancel the job #$1"
    ssh head.hpc.zhaw.ch "cd $REMOTE_PATH; pwd; scancel $1"
}

function dl-data() {
    echo "Downloading data from: $1"
    scp -r head.hpc.zhaw.ch:$1 ./data_temp
}

function help() {
echo
echo "$1 <command> [options]"
echo
echo "commands:"
echo
column -t -s"|" ./help.md | tail -n +1
echo
}

# Switch case for script parameter 1
case "$1" in
    start)
        start
        ;;
    init)
        init
        ;;
    list-scripts)
        list-scripts
        ;;
    run-script)
        run-script $2
        ;;
    run-ws)
        run-workflow $2
        ;;
    conn-hpc)
        conn-hpc
        ;;
    load-env)
        load-env $2
        ;;
    upload-script)
        upload-script $2
        ;;
    run-hpc-script)
        run-hpc-script $2
        ;;
    hpc-status)
        hpc-status
        ;;
    job-status)
        job-status $2
        ;;
    node-status)
        node-status
        ;;
    cancel-job)
        cancel-job $2
        ;;
    dl-data)
        dl-data $2
        ;;
    *)
        help help
        exit 1
esac